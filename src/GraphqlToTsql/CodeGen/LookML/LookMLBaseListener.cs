//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from LookML.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace GraphqlToTsql.CodeGen.LookML {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ILookMLListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class LookMLBaseListener : ILookMLListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LookMLParser.lookml"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLookml([NotNull] LookMLParser.LookmlContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LookMLParser.lookml"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLookml([NotNull] LookMLParser.LookmlContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LookMLParser.view"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterView([NotNull] LookMLParser.ViewContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LookMLParser.view"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitView([NotNull] LookMLParser.ViewContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LookMLParser.sql_table_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSql_table_name([NotNull] LookMLParser.Sql_table_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LookMLParser.sql_table_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSql_table_name([NotNull] LookMLParser.Sql_table_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LookMLParser.derived_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDerived_table([NotNull] LookMLParser.Derived_tableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LookMLParser.derived_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDerived_table([NotNull] LookMLParser.Derived_tableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LookMLParser.derived_table_pair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDerived_table_pair([NotNull] LookMLParser.Derived_table_pairContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LookMLParser.derived_table_pair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDerived_table_pair([NotNull] LookMLParser.Derived_table_pairContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LookMLParser.field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterField([NotNull] LookMLParser.FieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LookMLParser.field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitField([NotNull] LookMLParser.FieldContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LookMLParser.pair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPair([NotNull] LookMLParser.PairContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LookMLParser.pair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPair([NotNull] LookMLParser.PairContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LookMLParser.array_key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArray_key([NotNull] LookMLParser.Array_keyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LookMLParser.array_key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArray_key([NotNull] LookMLParser.Array_keyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LookMLParser.array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArray([NotNull] LookMLParser.ArrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LookMLParser.array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArray([NotNull] LookMLParser.ArrayContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LookMLParser.key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKey([NotNull] LookMLParser.KeyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LookMLParser.key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKey([NotNull] LookMLParser.KeyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LookMLParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue([NotNull] LookMLParser.ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LookMLParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue([NotNull] LookMLParser.ValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LookMLParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] LookMLParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LookMLParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] LookMLParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LookMLParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComment([NotNull] LookMLParser.CommentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LookMLParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComment([NotNull] LookMLParser.CommentContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace GraphqlToTsql.CodeGen.LookML
