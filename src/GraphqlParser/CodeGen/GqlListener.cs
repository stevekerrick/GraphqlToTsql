//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\git\GraphqlToSql\src\GraphqlParser\Gql.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace GraphqlToTsql.GraphqlParser.CodeGen {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="GqlParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IGqlListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.document"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDocument([NotNull] GqlParser.DocumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.document"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDocument([NotNull] GqlParser.DocumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefinition([NotNull] GqlParser.DefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefinition([NotNull] GqlParser.DefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.operationDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperationDefinition([NotNull] GqlParser.OperationDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.operationDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperationDefinition([NotNull] GqlParser.OperationDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.selectionSet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectionSet([NotNull] GqlParser.SelectionSetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.selectionSet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectionSet([NotNull] GqlParser.SelectionSetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.operationType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperationType([NotNull] GqlParser.OperationTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.operationType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperationType([NotNull] GqlParser.OperationTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.selection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelection([NotNull] GqlParser.SelectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.selection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelection([NotNull] GqlParser.SelectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterField([NotNull] GqlParser.FieldContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitField([NotNull] GqlParser.FieldContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.fieldName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldName([NotNull] GqlParser.FieldNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.fieldName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldName([NotNull] GqlParser.FieldNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.alias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlias([NotNull] GqlParser.AliasContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.alias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlias([NotNull] GqlParser.AliasContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArguments([NotNull] GqlParser.ArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArguments([NotNull] GqlParser.ArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] GqlParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] GqlParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.fragmentSpread"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFragmentSpread([NotNull] GqlParser.FragmentSpreadContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.fragmentSpread"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFragmentSpread([NotNull] GqlParser.FragmentSpreadContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.inlineFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInlineFragment([NotNull] GqlParser.InlineFragmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.inlineFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInlineFragment([NotNull] GqlParser.InlineFragmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.fragmentDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFragmentDefinition([NotNull] GqlParser.FragmentDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.fragmentDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFragmentDefinition([NotNull] GqlParser.FragmentDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.fragmentName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFragmentName([NotNull] GqlParser.FragmentNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.fragmentName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFragmentName([NotNull] GqlParser.FragmentNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.directives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirectives([NotNull] GqlParser.DirectivesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.directives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirectives([NotNull] GqlParser.DirectivesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirective([NotNull] GqlParser.DirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirective([NotNull] GqlParser.DirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.typeCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeCondition([NotNull] GqlParser.TypeConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.typeCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeCondition([NotNull] GqlParser.TypeConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.variableDefinitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDefinitions([NotNull] GqlParser.VariableDefinitionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.variableDefinitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDefinitions([NotNull] GqlParser.VariableDefinitionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.variableDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDefinition([NotNull] GqlParser.VariableDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.variableDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDefinition([NotNull] GqlParser.VariableDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] GqlParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] GqlParser.VariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.defaultValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultValue([NotNull] GqlParser.DefaultValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.defaultValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultValue([NotNull] GqlParser.DefaultValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.valueOrVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueOrVariable([NotNull] GqlParser.ValueOrVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.valueOrVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueOrVariable([NotNull] GqlParser.ValueOrVariableContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stringValue</c>
	/// labeled alternative in <see cref="GqlParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringValue([NotNull] GqlParser.StringValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stringValue</c>
	/// labeled alternative in <see cref="GqlParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringValue([NotNull] GqlParser.StringValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numberValue</c>
	/// labeled alternative in <see cref="GqlParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberValue([NotNull] GqlParser.NumberValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numberValue</c>
	/// labeled alternative in <see cref="GqlParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberValue([NotNull] GqlParser.NumberValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanValue</c>
	/// labeled alternative in <see cref="GqlParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanValue([NotNull] GqlParser.BooleanValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanValue</c>
	/// labeled alternative in <see cref="GqlParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanValue([NotNull] GqlParser.BooleanValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>arrayValue</c>
	/// labeled alternative in <see cref="GqlParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayValue([NotNull] GqlParser.ArrayValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>arrayValue</c>
	/// labeled alternative in <see cref="GqlParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayValue([NotNull] GqlParser.ArrayValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] GqlParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] GqlParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeName([NotNull] GqlParser.TypeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeName([NotNull] GqlParser.TypeNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.listType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListType([NotNull] GqlParser.ListTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.listType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListType([NotNull] GqlParser.ListTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.nonNullType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonNullType([NotNull] GqlParser.NonNullTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.nonNullType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonNullType([NotNull] GqlParser.NonNullTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GqlParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray([NotNull] GqlParser.ArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GqlParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray([NotNull] GqlParser.ArrayContext context);
}
} // namespace GraphqlToTsql.GraphqlParser.CodeGen
